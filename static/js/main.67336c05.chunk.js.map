{"version":3,"sources":["components/PadButton.js","components/Pad.js","App.js","serviceWorker.js","index.js"],"names":["inactiveStyle","background","boxShadow","activeStyle","position","top","left","PadButton","props","state","style","playAudio","bind","handleKeyPress","padActivation","document","addEventListener","this","removeEventListener","e","keyCode","setState","setTimeout","sound","getElementById","keyTrigger","currentTime","play","showIdDisplay","id","clearDisplay","className","onClick","src","audiofile","Component","Pad","fullPad","currentBank","map","drumObj","i","bankArr","key","clearBank","distortedBank","App","bankIcon","ToggleOnTwoToneIcon","display","String","fromCharCode","changeBank","displayAudioId","ToggleOffTwoToneIcon","fontSize","marginRight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.67336c05.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./PadButton.css\";\r\n\r\nconst inactiveStyle = {\r\n  background: \"linear-gradient(to bottom, #5e278f 5%, #7654af 100%)\",\r\n  boxShadow: \"2px 2px 1px 0px #ea5573\",\r\n};\r\n\r\nconst activeStyle = {\r\n  background: \"linear-gradient(to bottom, #5e278f 5%, #ea5573 95%)\",\r\n  position: \"relative\",\r\n  top: \"2px\",\r\n  left: \"1px\",\r\n  boxShadow: \"1px 1px 0px 0px #5e278f\",\r\n};\r\n\r\nexport default class PadButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { style: inactiveStyle };\r\n\r\n    this.playAudio = this.playAudio.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    this.padActivation = this.padActivation.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n  handleKeyPress(e) {\r\n    if (e.keyCode === this.props.keyCode) {\r\n      this.playAudio();\r\n    }\r\n  }\r\n\r\n  padActivation() {\r\n    this.setState({ style: activeStyle });\r\n    setTimeout(() => this.setState({ style: inactiveStyle }), 200);\r\n  }\r\n\r\n  playAudio(e) {\r\n    const sound = document.getElementById(this.props.keyTrigger);\r\n    sound.currentTime = 0;\r\n    sound.play();\r\n    this.props.showIdDisplay(this.props.id);\r\n    this.props.clearDisplay();\r\n    this.padActivation();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        className='drum-pad'\r\n        style={this.state.style}\r\n        id={this.props.id}\r\n        onClick={this.playAudio}\r\n      >\r\n        <audio\r\n          className='clip'\r\n          id={this.props.keyTrigger}\r\n          src={this.props.audiofile}\r\n        ></audio>\r\n        {this.props.keyTrigger}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PadButton from \"./PadButton\";\r\nimport \"./Pad.css\";\r\nexport default class Pad extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    let fullPad = this.props.currentBank.map((drumObj, i, bankArr) => {\r\n      return (\r\n        <PadButton\r\n          key={bankArr[i].id}\r\n          keyCode={bankArr[i].keyCode}\r\n          keyTrigger={bankArr[i].keyTrigger}\r\n          audiofile={bankArr[i].audiofile}\r\n          id={bankArr[i].id}\r\n          showIdDisplay={this.props.showIdDisplay}\r\n          clearDisplay={this.props.clearDisplay}\r\n        />\r\n      );\r\n    });\r\n    return <div className='pad-bank'>{fullPad}</div>;\r\n  }\r\n}\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Pad from \"./components/Pad\";\nimport ToggleOffTwoToneIcon from \"@material-ui/icons/ToggleOffTwoTone\";\nimport ToggleOnTwoToneIcon from \"@material-ui/icons/ToggleOnTwoTone\";\n\nconst clearBank = [\n  {\n    keyCode: 81,\n    keyTrigger: \"Q\",\n    id: \"Heater-1\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\n  },\n  {\n    keyCode: 87,\n    keyTrigger: \"W\",\n    id: \"Heater-2\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\n  },\n  {\n    keyCode: 69,\n    keyTrigger: \"E\",\n    id: \"Heater-3\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\n  },\n  {\n    keyCode: 65,\n    keyTrigger: \"A\",\n    id: \"Heater-4\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\n  },\n  {\n    keyCode: 83,\n    keyTrigger: \"S\",\n    id: \"Clap\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\n  },\n  {\n    keyCode: 68,\n    keyTrigger: \"D\",\n    id: \"Open-HH\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\n  },\n  {\n    keyCode: 90,\n    keyTrigger: \"Z\",\n    id: \"Kick-n'-Hat\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\n  },\n  {\n    keyCode: 88,\n    keyTrigger: \"X\",\n    id: \"Kick\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\n  },\n  {\n    keyCode: 67,\n    keyTrigger: \"C\",\n    id: \"Closed-HH\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\n  },\n];\n\nconst distortedBank = [\n  {\n    keyCode: 81,\n    keyTrigger: \"Q\",\n    id: \"Chord-1\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\",\n  },\n  {\n    keyCode: 87,\n    keyTrigger: \"W\",\n    id: \"Chord-2\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\",\n  },\n  {\n    keyCode: 69,\n    keyTrigger: \"E\",\n    id: \"Chord-3\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\",\n  },\n  {\n    keyCode: 65,\n    keyTrigger: \"A\",\n    id: \"Shaker\",\n    audiofile:\n      \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\",\n  },\n  {\n    keyCode: 83,\n    keyTrigger: \"S\",\n    id: \"Open-HH\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\",\n  },\n  {\n    keyCode: 68,\n    keyTrigger: \"D\",\n    id: \"Closed-HH\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\",\n  },\n  {\n    keyCode: 90,\n    keyTrigger: \"Z\",\n    id: \"Punchy-Kick\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\",\n  },\n  {\n    keyCode: 88,\n    keyTrigger: \"X\",\n    id: \"Side-Stick\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\",\n  },\n  {\n    keyCode: 67,\n    keyTrigger: \"C\",\n    id: \"Snare\",\n    audiofile: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\",\n  },\n];\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentBank: clearBank,\n      bankIcon: ToggleOnTwoToneIcon,\n      display: String.fromCharCode(160),\n    };\n    this.changeBank = this.changeBank.bind(this);\n    this.clearDisplay = this.clearDisplay.bind(this);\n    this.displayAudioId = this.displayAudioId.bind(this);\n  }\n\n  changeBank() {\n    if (this.state.currentBank === clearBank) {\n      this.setState({\n        currentBank: distortedBank,\n        bankIcon: ToggleOffTwoToneIcon,\n        display: \"Heater Kit\",\n      });\n      this.clearDisplay();\n    } else {\n      this.setState({\n        currentBank: clearBank,\n        bankIcon: ToggleOnTwoToneIcon,\n        display: \"Smooth Piano Kit\",\n      });\n      this.clearDisplay();\n    }\n  }\n\n  clearDisplay() {\n    setTimeout(\n      () =>\n        this.setState({\n          display: String.fromCharCode(160),\n        }),\n      2000\n    );\n  }\n\n  displayAudioId(id) {\n    this.setState({\n      display: id,\n    });\n  }\n\n  render() {\n    return (\n      <div id='drum-machine'>\n        <h1 id='title'>Drum Machine</h1>\n        <p id='display'>{this.state.display}</p>\n        <Pad\n          currentBank={this.state.currentBank}\n          showIdDisplay={this.displayAudioId}\n          clearDisplay={this.clearDisplay}\n        />\n        <div id='switches' onClick={this.changeBank}>\n          <this.state.bankIcon\n            style={{ fontSize: \"3.5rem\", marginRight: \"5px\" }}\n          />\n          Bank Switch\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}